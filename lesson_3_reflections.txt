When would you want to use a remote repository rather than keeping all your work
local?

    You might want to use a remote repository to share all of your work with other people, backup your site,
    etc.

Why might you want to always pull changes manually rather than having Git
automatically stay up-to-date with your remote repository?

    There may be others working on the files up on github and you don't want their work to mess up something you are working on. 

Describe the differences between forks, clones, and branches.  When would you
use one instead of another?

    A fork is used when you want to get a copy of a respository someone is already working on and make changes to the file. A link back to the original repository is still maintained. 

    Clones are used when you want to get a copy of a repository, but not maintain the link.

    A branch is used if you have some experimental code or a new feature, perhaps a different language, operating system that you want to work on while maintaining the original. 

What is the benefit of having a copy of the last known state of the remote
stored locally?

    If you were going to be disconnected from the Internet for a while you could have a copy of the last known state of the remote on your workstations and still be able to work on the repository. When you returned you could push your changes up or if necessary merge any new changes in. 

How would you collaborate without using Git or GitHub?  What would be easier,
and what would be harder?

    A lot of collaboration today is done using SharePoint, but that is more for Excel and Word files. Not so much on the application development. Github's pull request definitely would help make collaboration easier. 

When would you want to make changes in a separate branch rather than directly in
master?  What benefits does each approach have?

    Fill in your answer here
